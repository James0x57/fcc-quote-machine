{"version":3,"sources":["QuoteMachine.js","index.js"],"names":["littleWillie","QuoteMachine","initialState","author","title","lines","tweetText","useState","state","setState","makePoem","poem","buildLines","join","verse","map","line","id","augmented-ui","className","onClick","request","XMLHttpRequest","open","onload","data","JSON","parse","this","response","status","console","reason","log","num","Math","floor","random","length","onerror","send","href","target","ReactDOM","render","document","getElementById"],"mappings":"0LAGMA,EAAgB,4BACE,2DACA,2DACA,sDACA,6DAsFTC,MAnFf,WACE,IAAMC,EAAe,CACnBC,OAAQ,UACRC,MAAO,iBACPC,MAAOL,EACPM,UAAW,IALS,EAOIC,mBAASL,GAPb,mBAOfM,EAPe,KAORC,EAPQ,KAuChBC,EAAW,SAAAC,GACf,IAAMN,EAAQO,EAAWD,EAAKN,OACxBC,EAAYK,EAAKP,MAAQ,OAASO,EAAKR,OAAS,IAAMQ,EAAKN,MAAMQ,KAAK,OAC5EJ,EAAS,CACPN,OAAQQ,EAAKR,OACbC,MAAOO,EAAKP,MACZC,QACAC,eAIEM,EAAa,SAACP,GAClB,IAAMS,EAAQT,EAAMU,KAAI,SAAAC,GACtB,OAAO,4BAAKA,MAEd,OACE,4BACGF,IAKP,OACE,yBAAKG,GAAG,iBACN,yBAAKA,GAAG,YAAYC,eAAa,sBAC/B,uBAAGD,GAAG,SAAST,EAAMJ,OACrB,uBAAGa,GAAG,UAAN,MAAmBT,EAAML,QACzB,uBAAGc,GAAG,QAAQT,EAAMH,OAEpB,yBAAKc,UAAU,MAAMD,eAAa,sBAAsBE,QA3D5C,WAChB,IACMC,EAAU,IAAIC,eACpBD,EAAQE,KAAK,MAFG,uCAEa,GAE7BF,EAAQG,OAAS,WACf,IAAIC,EAAOC,KAAKC,MAAMC,KAAKC,UAC3B,GAAID,KAAKE,QAAU,KAAOF,KAAKE,OAAS,IACtC,GAAGC,QAAQD,QAAUC,QAAQC,OAC3BD,QAAQE,IAAI,gEACZF,QAAQE,IAAIR,EAAKK,QACjBC,QAAQE,IAAIR,EAAKO,YACZ,CACL,IAAME,EAAMC,KAAKC,MAAMD,KAAKE,SAASZ,EAAKa,QAC1C5B,EAASe,EAAKS,SAIhBH,QAAQE,IAAI,gEACZF,QAAQE,IAAIR,EAAKK,QACjBC,QAAQE,IAAIR,EAAKO,SAGrBX,EAAQkB,QAAU,WAEhBR,QAAQE,IAAI,qEAEdZ,EAAQmB,SAiCF,0BAAMvB,GAAG,aAAT,eAEF,yBAAKE,UAAU,MAAMD,eAAa,uBAChC,uBAAGuB,KAAI,+CAA0CjC,EAAMF,WACrDoC,OAAO,SACPzB,GAAG,eAFL,kB,MC3EV0B,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.e84432d3.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\n\nconst littleWillie = (<ul>\n                        <li>Willie found some dynamite,</li>\n                        <li>Didn't understand it quite.</li>\n                        <li>Curiosity seldom pays,</li>\n                        <li>It rained Willie seven days.</li>\n                      </ul>);\n\nfunction QuoteMachine() {\n  const initialState = {\n    author: 'unknown',\n    title: 'Little Willies',\n    lines: littleWillie,\n    tweetText: ''\n  }\n  const [state, setState] = useState(initialState);\n\n  const getPoetry = () => {\n    const poemAPI = \"http://poetrydb.org/linecount/4:abs\";\n    const request = new XMLHttpRequest();\n    request.open('GET', poemAPI, true);\n\n    request.onload = function() {\n      var data = JSON.parse(this.response);\n      if (this.status >= 200 && this.status < 400) {\n        if(console.status && console.reason) {\n          console.log(\"Something went wrong. Please refresh the page and try again.\")\n          console.log(data.status)\n          console.log(data.reason)\n        } else { // everything went right\n          const num = Math.floor(Math.random()*data.length);\n          makePoem(data[num]);\n        }\n      } else {\n        // We reached our target server, but it returned an error\n        console.log(\"Something went wrong. Please refresh the page and try again.\")\n        console.log(data.status)\n        console.log(data.reason)\n      }\n    };\n    request.onerror = function() {\n      // There was a connection error of some sort\n      console.log(\"Connection problem found, please refresh the page and try again.\");\n    };\n    request.send();\n  }\n\n  const makePoem = poem => {\n    const lines = buildLines(poem.lines);\n    const tweetText = poem.title + ' by ' + poem.author + ' ' + poem.lines.join(\" / \");\n    setState({\n      author: poem.author,\n      title: poem.title,\n      lines,\n      tweetText\n    })\n  }\n\n  const buildLines = (lines) => {\n    const verse = lines.map(line => {\n      return <li>{line}</li>\n    })\n    return(\n      <ul>\n        {verse}\n      </ul>\n    )\n  }\n\n  return (\n    <div id=\"quote-machine\">\n      <div id=\"quote-box\" augmented-ui=\"r-rect bl-rect exe\">\n        <p id=\"title\">{state.title}</p>\n        <p id=\"author\">by {state.author}</p>\n        <p id=\"text\">{state.lines}</p>\n        \n        <div className=\"btn\" augmented-ui=\"tl-clip br-clip exe\" onClick={getPoetry}>\n          <span id=\"new-quote\">poem again</span>\n        </div>\n        <div className=\"btn\" augmented-ui=\"tl-clip br-clip exe\">\n          <a href={`http://twitter.com/intent/tweet?text=${state.tweetText}`}\n            target=\"_blank\" \n            id=\"tweet-quote\">\n              tweet poem\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default QuoteMachine;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './augmented.css';\nimport './index.scss';\nimport QuoteMachine from './QuoteMachine';\nimport 'victormono';\n\nReactDOM.render(<QuoteMachine />, document.getElementById('root'));"],"sourceRoot":""}